{
    "definition": {
        "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
        "actions": {
            "BuilNewIPList": {
                "actions": {
                    "Append_to_array_variable": {
                        "inputs": {
                            "name": "NewIPList",
                            "value": "@items('BuilNewIPList')?['Address']"
                        },
                        "runAfter": {},
                        "type": "AppendToArrayVariable"
                    }
                },
                "foreach": "@body('Entities_-_Get_IPs')?['IPs']",
                "runAfter": {
                    "NewIPList": [
                        "Succeeded"
                    ]
                },
                "type": "Foreach"
            },
            "Condition": {
                "actions": {
                    "OriginalRule": {
                        "inputs": "@first(body('Filter_array'))",
                        "runAfter": {},
                        "type": "Compose"
                    },
                    "OtherRules": {
                        "inputs": {
                            "from": "@body('Parse_WafPolicy')['properties']['customRules']['rules']",
                            "where": "@not(equals(item()?['name'], outputs('RuleName')))"
                        },
                        "runAfter": {
                            "UpdatedRule": [
                                "Succeeded"
                            ]
                        },
                        "type": "Query"
                    },
                    "UpdateMatchConditions": {
                        "inputs": {
                            "from": "@outputs('OriginalRule')['matchConditions']",
                            "select": {
                                "matchValue": "@union(item()['matchValue'],variables('NewIPList'))",
                                "matchVariable": "@item()['matchVariable']",
                                "negateCondition": "@item()['negateCondition']",
                                "operator": "@item()['operator']",
                                "selector": "@item()['selector']",
                                "transforms": "@item()['transforms']"
                            }
                        },
                        "runAfter": {
                            "OriginalRule": [
                                "Succeeded"
                            ]
                        },
                        "type": "Select"
                    },
                    "UpdatedPolicy": {
                        "inputs": "@setProperty(body('Parse_WafPolicy'),'properties',setProperty(body('Parse_WafPolicy')['properties'],'customRules',setProperty(body('Parse_WafPolicy')['properties']['customRules'], 'rules', outputs('UpdatedRuleAdded'))))",
                        "runAfter": {
                            "UpdatedRuleAdded": [
                                "Succeeded"
                            ]
                        },
                        "type": "Compose"
                    },
                    "UpdatedRule": {
                        "inputs": [
                            "@setProperty(outputs('OriginalRule'), 'matchConditions', body('UpdateMatchConditions'))"
                        ],
                        "runAfter": {
                            "UpdateMatchConditions": [
                                "Succeeded"
                            ]
                        },
                        "type": "Compose"
                    },
                    "UpdatedRuleAdded": {
                        "inputs": "@union(body('OtherRules'),outputs('UpdatedRule'))",
                        "runAfter": {
                            "OtherRules": [
                                "Succeeded"
                            ]
                        },
                        "type": "Compose"
                    }
                },
                "description": "Check if Policy already has a DefaultDeny Rule, otherwise create it",
                "expression": {
                    "and": [
                        {
                            "greater": [
                                "@length(body('Filter_array'))",
                                0
                            ]
                        }
                    ]
                },
                "runAfter": {
                    "Filter_array": [
                        "Succeeded"
                    ]
                },
                "type": "If"
            },
            "Entities_-_Get_IPs": {
                "inputs": {
                    "body": "@triggerBody()?['Entities']",
                    "host": {
                        "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                        }
                    },
                    "method": "post",
                    "path": "/entities/ip"
                },
                "runAfter": {},
                "type": "ApiConnection"
            },
            "Filter_array": {
                "description": "Get DefaultDeny rule JSON definition, if rule exists",
                "inputs": {
                    "from": "@body('Parse_WafPolicy')['properties']['customRules']['rules']",
                    "where": "@equals(item()?['name'], outputs('RuleName'))"
                },
                "runAfter": {
                    "Parse_WafPolicy": [
                        "Succeeded"
                    ]
                },
                "type": "Query"
            },
            "For_each": {
                "actions": {
                    "Add_customRule": {
                        "inputs": {
                            "body": {
                                "body": "@{base64(outputs('UpdatedPolicy'))}",
                                "method": "PUT",
                                "url": "https://management.azure.com/subscriptions/35bd369b-2d53-460d-a9cd-a5ddae6dd49d/resourceGroups/tests/providers/Microsoft.Network/FrontDoorWebApplicationFirewallPolicies/AFDWAFPol01?api-version=2020-11-01"
                            },
                            "host": {
                                "connection": {
                                    "name": "@parameters('$connections')['webcontents']['connectionId']"
                                }
                            },
                            "method": "post",
                            "path": "/codeless/InvokeHttp"
                        },
                        "runAfter": {},
                        "type": "ApiConnection"
                    }
                },
                "foreach": "@body('Entities_-_Get_IPs')?['IPs']",
                "runAfter": {
                    "Condition": [
                        "Succeeded"
                    ]
                },
                "type": "Foreach"
            },
            "IPList": {
                "inputs": {
                    "variables": [
                        {
                            "name": "IPList",
                            "type": "array"
                        }
                    ]
                },
                "runAfter": {
                    "Entities_-_Get_IPs": [
                        "Succeeded"
                    ]
                },
                "type": "InitializeVariable"
            },
            "Invoke_an_HTTP_request": {
                "description": "Get WAF Policy",
                "inputs": {
                    "body": {
                        "method": "GET",
                        "url": "https://management.azure.com/subscriptions/35bd369b-2d53-460d-a9cd-a5ddae6dd49d/resourceGroups/tests/providers/Microsoft.Network/FrontDoorWebApplicationFirewallPolicies/AFDWAFPol01?api-version=2020-11-01"
                    },
                    "host": {
                        "connection": {
                            "name": "@parameters('$connections')['webcontents']['connectionId']"
                        }
                    },
                    "method": "post",
                    "path": "/codeless/InvokeHttp"
                },
                "runAfter": {
                    "RuleName": [
                        "Succeeded"
                    ]
                },
                "type": "ApiConnection"
            },
            "NewIPList": {
                "inputs": {
                    "variables": [
                        {
                            "name": "NewIPList",
                            "type": "array"
                        }
                    ]
                },
                "runAfter": {
                    "IPList": [
                        "Succeeded"
                    ]
                },
                "type": "InitializeVariable"
            },
            "Parse_WafPolicy": {
                "description": "Get JSON object from WAF policy",
                "inputs": {
                    "content": "@body('Invoke_an_HTTP_request')",
                    "schema": {
                        "$schema": "http://json-schema.org/draft-04/schema#",
                        "properties": {
                            "id": {
                                "type": "string"
                            },
                            "location": {
                                "type": "string"
                            },
                            "name": {
                                "type": "string"
                            },
                            "properties": {
                                "properties": {
                                    "customRules": {
                                        "properties": {
                                            "rules": {
                                                "items": [
                                                    {
                                                        "properties": {
                                                            "action": {
                                                                "type": "string"
                                                            },
                                                            "enabledState": {
                                                                "type": "string"
                                                            },
                                                            "matchConditions": {
                                                                "items": [
                                                                    {
                                                                        "properties": {
                                                                            "matchValue": {
                                                                                "items": [
                                                                                    {
                                                                                        "type": "string"
                                                                                    }
                                                                                ],
                                                                                "type": "array"
                                                                            },
                                                                            "matchVariable": {
                                                                                "type": "string"
                                                                            },
                                                                            "negateCondition": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "operator": {
                                                                                "type": "string"
                                                                            },
                                                                            "selector": {
                                                                                "type": "null"
                                                                            },
                                                                            "transforms": {
                                                                                "items": {},
                                                                                "type": "array"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "matchVariable",
                                                                            "selector",
                                                                            "operator",
                                                                            "negateCondition",
                                                                            "matchValue",
                                                                            "transforms"
                                                                        ],
                                                                        "type": "object"
                                                                    }
                                                                ],
                                                                "type": "array"
                                                            },
                                                            "name": {
                                                                "type": "string"
                                                            },
                                                            "priority": {
                                                                "type": "integer"
                                                            },
                                                            "rateLimitDurationInMinutes": {
                                                                "type": "integer"
                                                            },
                                                            "rateLimitThreshold": {
                                                                "type": "integer"
                                                            },
                                                            "ruleType": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "name",
                                                            "enabledState",
                                                            "priority",
                                                            "ruleType",
                                                            "rateLimitDurationInMinutes",
                                                            "rateLimitThreshold",
                                                            "matchConditions",
                                                            "action"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    {
                                                        "properties": {
                                                            "action": {
                                                                "type": "string"
                                                            },
                                                            "enabledState": {
                                                                "type": "string"
                                                            },
                                                            "matchConditions": {
                                                                "items": [
                                                                    {
                                                                        "properties": {
                                                                            "matchValue": {
                                                                                "items": [
                                                                                    {
                                                                                        "type": "string"
                                                                                    },
                                                                                    {
                                                                                        "type": "string"
                                                                                    }
                                                                                ],
                                                                                "type": "array"
                                                                            },
                                                                            "matchVariable": {
                                                                                "type": "string"
                                                                            },
                                                                            "negateCondition": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "operator": {
                                                                                "type": "string"
                                                                            },
                                                                            "selector": {
                                                                                "type": "null"
                                                                            },
                                                                            "transforms": {
                                                                                "items": {},
                                                                                "type": "array"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "matchVariable",
                                                                            "selector",
                                                                            "operator",
                                                                            "negateCondition",
                                                                            "matchValue",
                                                                            "transforms"
                                                                        ],
                                                                        "type": "object"
                                                                    }
                                                                ],
                                                                "type": "array"
                                                            },
                                                            "name": {
                                                                "type": "string"
                                                            },
                                                            "priority": {
                                                                "type": "integer"
                                                            },
                                                            "rateLimitDurationInMinutes": {
                                                                "type": "integer"
                                                            },
                                                            "rateLimitThreshold": {
                                                                "type": "integer"
                                                            },
                                                            "ruleType": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "name",
                                                            "enabledState",
                                                            "priority",
                                                            "ruleType",
                                                            "rateLimitDurationInMinutes",
                                                            "rateLimitThreshold",
                                                            "matchConditions",
                                                            "action"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    {
                                                        "properties": {
                                                            "action": {
                                                                "type": "string"
                                                            },
                                                            "enabledState": {
                                                                "type": "string"
                                                            },
                                                            "matchConditions": {
                                                                "items": [
                                                                    {
                                                                        "properties": {
                                                                            "matchValue": {
                                                                                "items": {},
                                                                                "type": "array"
                                                                            },
                                                                            "matchVariable": {
                                                                                "type": "string"
                                                                            },
                                                                            "negateCondition": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "operator": {
                                                                                "type": "string"
                                                                            },
                                                                            "selector": {
                                                                                "type": "null"
                                                                            },
                                                                            "transforms": {
                                                                                "items": {},
                                                                                "type": "array"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "matchVariable",
                                                                            "selector",
                                                                            "operator",
                                                                            "negateCondition",
                                                                            "matchValue",
                                                                            "transforms"
                                                                        ],
                                                                        "type": "object"
                                                                    }
                                                                ],
                                                                "type": "array"
                                                            },
                                                            "name": {
                                                                "type": "string"
                                                            },
                                                            "priority": {
                                                                "type": "integer"
                                                            },
                                                            "rateLimitDurationInMinutes": {
                                                                "type": "integer"
                                                            },
                                                            "rateLimitThreshold": {
                                                                "type": "integer"
                                                            },
                                                            "ruleType": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "name",
                                                            "enabledState",
                                                            "priority",
                                                            "ruleType",
                                                            "rateLimitDurationInMinutes",
                                                            "rateLimitThreshold",
                                                            "matchConditions",
                                                            "action"
                                                        ],
                                                        "type": "object"
                                                    }
                                                ],
                                                "type": "array"
                                            }
                                        },
                                        "required": [
                                            "rules"
                                        ],
                                        "type": "object"
                                    },
                                    "frontendEndpointLinks": {
                                        "items": {},
                                        "type": "array"
                                    },
                                    "managedRules": {
                                        "properties": {
                                            "managedRuleSets": {
                                                "items": [
                                                    {
                                                        "properties": {
                                                            "exclusions": {
                                                                "items": {},
                                                                "type": "array"
                                                            },
                                                            "ruleGroupOverrides": {
                                                                "items": {},
                                                                "type": "array"
                                                            },
                                                            "ruleSetAction": {
                                                                "type": "string"
                                                            },
                                                            "ruleSetType": {
                                                                "type": "string"
                                                            },
                                                            "ruleSetVersion": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "ruleSetType",
                                                            "ruleSetVersion",
                                                            "ruleSetAction",
                                                            "ruleGroupOverrides",
                                                            "exclusions"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    {
                                                        "properties": {
                                                            "exclusions": {
                                                                "items": {},
                                                                "type": "array"
                                                            },
                                                            "ruleGroupOverrides": {
                                                                "items": {},
                                                                "type": "array"
                                                            },
                                                            "ruleSetAction": {
                                                                "type": "null"
                                                            },
                                                            "ruleSetType": {
                                                                "type": "string"
                                                            },
                                                            "ruleSetVersion": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "ruleSetType",
                                                            "ruleSetVersion",
                                                            "ruleSetAction",
                                                            "ruleGroupOverrides",
                                                            "exclusions"
                                                        ],
                                                        "type": "object"
                                                    }
                                                ],
                                                "type": "array"
                                            }
                                        },
                                        "required": [
                                            "managedRuleSets"
                                        ],
                                        "type": "object"
                                    },
                                    "policySettings": {
                                        "properties": {
                                            "customBlockResponseBody": {
                                                "type": "null"
                                            },
                                            "customBlockResponseStatusCode": {
                                                "type": "null"
                                            },
                                            "enabledState": {
                                                "type": "string"
                                            },
                                            "mode": {
                                                "type": "string"
                                            },
                                            "redirectUrl": {
                                                "type": "null"
                                            },
                                            "requestBodyCheck": {
                                                "type": "string"
                                            }
                                        },
                                        "required": [
                                            "enabledState",
                                            "mode",
                                            "redirectUrl",
                                            "customBlockResponseStatusCode",
                                            "customBlockResponseBody",
                                            "requestBodyCheck"
                                        ],
                                        "type": "object"
                                    },
                                    "provisioningState": {
                                        "type": "string"
                                    },
                                    "resourceState": {
                                        "type": "string"
                                    },
                                    "routingRuleLinks": {
                                        "items": {},
                                        "type": "array"
                                    },
                                    "securityPolicyLinks": {
                                        "items": [
                                            {
                                                "properties": {
                                                    "id": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "id"
                                                ],
                                                "type": "object"
                                            }
                                        ],
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "policySettings",
                                    "customRules",
                                    "managedRules",
                                    "frontendEndpointLinks",
                                    "securityPolicyLinks",
                                    "routingRuleLinks",
                                    "resourceState",
                                    "provisioningState"
                                ],
                                "type": "object"
                            },
                            "sku": {
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "name"
                                ],
                                "type": "object"
                            },
                            "tags": {
                                "type": "object"
                            },
                            "type": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "id",
                            "type",
                            "name",
                            "location",
                            "tags",
                            "sku",
                            "properties"
                        ],
                        "type": "object"
                    }
                },
                "runAfter": {
                    "Invoke_an_HTTP_request": [
                        "Succeeded"
                    ]
                },
                "type": "ParseJson"
            },
            "RuleName": {
                "description": "Rule to create or update",
                "inputs": "DefaultDeny",
                "runAfter": {
                    "BuilNewIPList": [
                        "Succeeded"
                    ]
                },
                "type": "Compose"
            }
        },
        "contentVersion": "1.0.0.0",
        "outputs": {},
        "parameters": {
            "$connections": {
                "defaultValue": {},
                "type": "Object"
            }
        },
        "triggers": {
            "Microsoft_Sentinel_alert": {
                "inputs": {
                    "body": {
                        "callback_url": "@{listCallbackUrl()}"
                    },
                    "host": {
                        "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                        }
                    },
                    "path": "/subscribe"
                },
                "type": "ApiConnectionWebhook"
            }
        }
    },
    "parameters": {
        "$connections": {
            "value": {
                "azuresentinel": {
                    "connectionId": "/subscriptions/35bd369b-2d53-460d-a9cd-a5ddae6dd49d/resourceGroups/RockStar/providers/Microsoft.Web/connections/azuresentinel-AddIPToAllowList",
                    "connectionName": "azuresentinel-AddIPToAllowList",
                    "connectionProperties": {
                        "authentication": {
                            "type": "ManagedServiceIdentity"
                        }
                    },
                    "id": "/subscriptions/35bd369b-2d53-460d-a9cd-a5ddae6dd49d/providers/Microsoft.Web/locations/westeurope/managedApis/azuresentinel"
                },
                "webcontents": {
                    "connectionId": "/subscriptions/35bd369b-2d53-460d-a9cd-a5ddae6dd49d/resourceGroups/RockStar/providers/Microsoft.Web/connections/webcontents-1",
                    "connectionName": "webcontents-1",
                    "id": "/subscriptions/35bd369b-2d53-460d-a9cd-a5ddae6dd49d/providers/Microsoft.Web/locations/westeurope/managedApis/webcontents"
                }
            }
        }
    }
}